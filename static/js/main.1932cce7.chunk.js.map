{"version":3,"sources":["components/TableHeader/index.js","components/EmployeeTable/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","props","className","type","onClick","sortByHeading","EmployeeTable","name","filter","role","days_in_space","final_mission","id","Wrapper","children","Title","App","state","employees","heading","isNaN","employeeSorted","sort","a","b","setState","employeeFiltered","employee","this","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o0CAceA,MAXf,SAAqBC,GACnB,OACI,qBAAIC,UAAY,eAAhB,UACE,6BAAI,wBAAQC,KAAK,SAASC,QAAS,kBAAMH,EAAMI,cAAc,SAAzD,oBACJ,6BAAI,wBAAQF,KAAK,SAASC,QAAS,kBAAMH,EAAMI,cAAc,SAAzD,oBACJ,6BAAI,wBAAQF,KAAK,SAASC,QAAS,kBAAMH,EAAMI,cAAc,kBAAzD,6BACJ,6BAAI,wBAAQF,KAAK,SAASC,QAAS,kBAAMH,EAAMI,cAAc,iBAAzD,gC,MCOGC,MAZf,SAAuBL,GACrB,OACI,+BACE,6BAAKA,EAAMM,OACX,oBAAIH,QAAS,kBAAMH,EAAMO,OAAOP,EAAMQ,OAAtC,SAA8CR,EAAMQ,OACpD,6BAAKR,EAAMS,gBACX,6BAAKT,EAAMU,kBAJJV,EAAMW,K,MCCNC,MAJf,SAAiBZ,GACf,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAMa,Y,MCG1BC,MAJf,SAAed,GACb,OAAO,oBAAIC,UAAU,QAAd,SAAuBD,EAAMa,Y,OCwDvBE,E,4MAnDbC,MAAQ,CACNC,a,EAGFb,cAAgB,SAAAc,GACd,GAAGC,MAAMF,EAAU,GAAGC,IAAU,CAC9B,IAAIE,EAAiBH,EAAUI,MAAK,SAACC,EAAEC,GACrC,OAAGD,EAAEJ,GAAWK,EAAEL,IAAoB,EACnCI,EAAEJ,GAAWK,EAAEL,GAAmB,EAC9B,KAET,EAAKM,SAAS,CAAEJ,uBACb,CACH,IAAIA,EAAiBH,EAAUI,MAAK,SAACC,EAAGC,GACtC,OAAOA,EAAEL,GAAWI,EAAEJ,MAExB,EAAKM,SAAS,CAAEP,UAAYG,M,EAIhCb,OAAS,SAAAA,GACL,IAAIkB,EAAmBR,EAAUV,QAAO,SAAAmB,GAAQ,OAAIA,EAASlB,OAASD,KACtE,EAAKiB,SAAS,CAAEP,UAAWQ,K,uDAIrB,IAAD,OACP,OACE,eAAC,EAAD,WACE,cAAC,EAAD,iCACA,gCAAO,kCACL,cAAC,EAAD,CACErB,cAAeuB,KAAKvB,gBAGrBuB,KAAKX,MAAMC,UAAUW,KAAI,SAAAF,GAAQ,OAC9B,cAAC,EAAD,CACEf,GAAIe,EAASf,GACbL,KAAMoB,EAASpB,KACfE,KAAMkB,EAASlB,KACfC,cAAeiB,EAASjB,cACxBC,cAAegB,EAAShB,cACxBH,OAAQ,EAAKA,wB,GA3CXsB,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1932cce7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction TableHeader(props) {\n  return (\n      <tr className = 'tableheading'>\n        <td><button type=\"button\" onClick={() => props.sortByHeading('name')}>Name</button></td>\n        <td><button type=\"button\" onClick={() => props.sortByHeading('role')}>Role</button></td>\n        <td><button type=\"button\" onClick={() => props.sortByHeading('days_in_space')}>Days in Space</button></td>\n        <td><button type=\"button\" onClick={() => props.sortByHeading('last_mission')}>Last Mission</button></td>\n      </tr> \n  );\n}\n\nexport default TableHeader;\n","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction EmployeeTable(props) {\n  return (\n      <tr key={props.id}>\n        <td>{props.name}</td>\n        <td onClick={() => props.filter(props.role)}>{props.role}</td>\n        <td>{props.days_in_space}</td>\n        <td>{props.final_mission}</td>\n      </tr>\n  );\n}\n\n\nexport default EmployeeTable;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport TableHeader from \"./components/TableHeader\"\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport employees from './components/employees.json';\nimport './index.css';\n\nclass App extends Component {\n  state = {\n    employees\n  };\n\n  sortByHeading = heading => {\n    if(isNaN(employees[0][heading])){\n      let employeeSorted = employees.sort((a,b) => {\n        if(a[heading] < b[heading]) { return -1; }\n        if(a[heading] > b[heading]) { return 1; }\n        return 0;\n      });\n      this.setState({ employeeSorted });      \n    }else{\n      let employeeSorted = employees.sort((a, b) => {\n        return b[heading] - a[heading]; \n      });\n      this.setState({ employees:  employeeSorted });\n    }\n  }\n\n  filter = filter => {\n      let employeeFiltered = employees.filter(employee => employee.role === filter);\n      this.setState({ employees: employeeFiltered });\n  }\n\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Employee Directory</Title>\n        <table><tbody>\n          <TableHeader\n            sortByHeading={this.sortByHeading}\n          />\n          \n          {this.state.employees.map(employee => (\n              <EmployeeTable\n                id={employee.id}\n                name={employee.name}\n                role={employee.role}\n                days_in_space={employee.days_in_space}\n                final_mission={employee.final_mission}\n                filter={this.filter}\n              />\n            ))}\n        </tbody></table>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}